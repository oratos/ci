resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: oratos-ci
  type: git
  source:
    uri: https://github.com/pivotal-cf/oratos-ci
    branch: master

- name: oratos-secrets
  type: git
  source:
    uri: git@github.com:pivotal-cf/oratos-secrets
    branch: master
    private_key: {{oratos-bot-github-key}}

- name: namespace-drain
  type: git
  source:
    uri: git@github.com:pivotal-cf/namespace-drain
    branch: master
    private_key: {{oratos-bot-github-key}}

- name: namespace-drain-dockerfile
  type: git
  source:
    uri: https://github.com/pivotal-cf/oratos-ci
    branch: master
    paths:
    - docker-images/namespace-drain

- name: namespace-drain-image
  type: docker-image
  source:
    repository: oratos/namespace-drain
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}

- name: slack-alert
  type: slack-notification
  source:
    url: {{slack-url}}

jobs:
- name: unit-tests
  plan:
  - aggregate:
    - get: namespace-drain
      trigger: true
    - get: oratos-ci
    - get: oratos-secrets
  - aggregate:
    - task: run-linter
      file: oratos-ci/tasks/golangci-lint/task.yml
      input_mapping:
        source-repo: namespace-drain
      params:
        IMPORT_PATH: github.com/pivotal-cf/namespace-drain
      on_failure:
        put: slack-alert
        params:
          text: Namespace Drain Linter failed
    - task: run-tests
      file: oratos-ci/tasks/go-test-with-latest-packages/task.yml
      privileged: true
      input_mapping:
        source-repo: namespace-drain
      params:
        IMPORT_PATH: github.com/pivotal-cf/namespace-drain
        PKGS_HOOK: |
          go list ./... | grep -v vendor | grep -v pkg/client
      on_failure:
        put: slack-alert
        params:
          text: Namespace Drain Unit tests failed
    - task: run-crd-tests
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: oratos/ci-base
        inputs:
        - name: namespace-drain
        - name: oratos-secrets
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            #!/bin/bash
            set -ex

            gcloud auth activate-service-account \
              --key-file oratos-secrets/oratos-ci-testing-service-account.json \
              --project cf-pks-observability
            gcloud container clusters get-credentials oratos-ci-testing \
              --zone us-central1-a

            namespace-drain/tests/test.sh
      on_failure:
        put: slack-alert
        params:
          text: Namespace Drain CRD tests failed
    - task: run-verify-codegen
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: oratos/ci-base
        inputs:
        - name: namespace-drain
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            #!/bin/bash
            set -ex

            export GOPATH="$PWD/workspace"
            path=workspace/src/github.com/pivotal-cf/namespace-drain
            mkdir -p "$path"
            cp -r namespace-drain/. "$path/"
            cd "$path"
            hack/verify-codegen.sh
      on_failure:
        put: slack-alert
        params:
          text: Namespace Drain Verify Codegen failed

- name: build-namespace-drain-image
  serial: true
  plan:
  - aggregate:
    - get: namespace-drain
      trigger: true
      passed:
      - unit-tests
    - get: namespace-drain-dockerfile
      trigger: true
    - get: oratos-ci
  - task: prepare-build
    file: oratos-ci/tasks/build-go-docker-image/task.yml
    input_mapping:
      context-repo: namespace-drain-dockerfile
      source-repo: namespace-drain
    params:
      CONTEXT_PATH: docker-images/namespace-drain
      BASE_PACKAGE: github.com/pivotal-cf/namespace-drain
  - put: namespace-drain-image
    params:
      build: build-image/build
      tag: build-image/tag
      tag_as_latest: true
      cache: true
      cache_tag: latest
    get_params:
      skip_download: true
