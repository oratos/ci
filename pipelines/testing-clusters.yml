groups:
- name: crfr-testing
  jobs:
  - oratos-ci-testing-cfcr-bbl-up
  - oratos-ci-testing-cfcr-bbl-destroy
  - oratos-ci-testing-cfcr-deploy
  - oratos-ci-testing-cfcr-destroy
- name: control-plane-test
  jobs:
  - control-plane-test-bbl-up
  - control-plane-test-bbl-destroy
  - control-plane-test-deploy
  - control-plane-test-destroy

resource_types:
- name: vault
  type: docker-image
  source:
    repository: wfernandes/vault-resource
    tag: latest

resources:
- name: oratos-ci-testing-cfcr-bbl-state
  type: vault
  source:
    url: https://vault.oratos.ci.cf-app.com
    role_id: ((vault.role_id))
    secret_id: ((vault.secret_id))
    path: secret/envs/oratos-ci-testing-cfcr-bbl-state
    tarball: true

- name: oratos-ci-testing-cfcr-gcp-vars
  type: vault
  source:
    url: https://vault.oratos.ci.cf-app.com
    role_id: ((vault.role_id))
    secret_id: ((vault.secret_id))
    path: secret/envs/oratos-ci-testing-cfcr-gcp-vars

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v7.5

- name: oratos-ci
  type: git
  source:
    uri: git@github.com:pivotal-cf/oratos-ci.git
    branch: master
    private_key: ((github.oratos-bot-private-key))

- name: kubo-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/kubo-deployment
    branch: v0.31.0

- name: bosh-metric-sink
  type: github-release
  source:
    owner: pivotal
    repository: bosh-metric-sink
    access_token: ((github.oratos-bot-release-access-token))

- name: kubo-release-bosh-io
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/kubo-release
    regexp: "0.31.*"

- name: control-plane-test-bbl-state
  type: vault
  source:
    url: https://vault.oratos.ci.cf-app.com
    role_id: ((vault.role_id))
    secret_id: ((vault.secret_id))
    path: secret/envs/control-plane-test-bbl-state
    tarball: true

- name: control-plane-test-gcp-vars
  type: vault
  source:
    url: https://vault.oratos.ci.cf-app.com
    role_id: ((vault.role_id))
    secret_id: ((vault.secret_id))
    path: secret/envs/control-plane-test-gcp-vars

jobs:
- name: oratos-ci-testing-cfcr-bbl-up
  serial: true
  serial_groups:
  - oratos-ci-testing-cfcr-director-lifecycle
  plan:
  - aggregate:
    - get: oratos-ci-testing-cfcr-bbl-state
    - get: cf-deployment-concourse-tasks
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    input_mapping:
      bbl-state: oratos-ci-testing-cfcr-bbl-state
      bbl-config: oratos-ci-testing-cfcr-bbl-state
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcloud.oratos-ci-testing-cfcr-service-account))
      BBL_GCP_REGION: us-central1
      BBL_ENV_NAME: oratos-ci-testing
      SKIP_LB_CREATION: true
  - put: oratos-ci-testing-cfcr-bbl-state
    params:
      data: updated-bbl-state

- name: oratos-ci-testing-cfcr-bbl-destroy
  serial: true
  serial_groups:
  - oratos-ci-testing-cfcr-director-lifecycle
  plan:
  - aggregate:
    - get: oratos-ci-testing-cfcr-bbl-state
    - get: cf-deployment-concourse-tasks
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: oratos-ci-testing-cfcr-bbl-state
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcloud.oratos-ci-testing-cfcr-service-account))
  - put: oratos-ci-testing-cfcr-bbl-state
    params:
      data: updated-bbl-state

- name: oratos-ci-testing-cfcr-deploy
  serial: true
  serial_groups:
  - oratos-ci-testing-cfcr-lifecycle
  plan:
  - aggregate:
    - get: oratos-ci-testing-cfcr-bbl-state
    - get: oratos-ci-testing-cfcr-gcp-vars
    - get: cf-deployment-concourse-tasks
    - get: oratos-ci
    - get: bosh-metric-sink
    - get: kubo-deployment
      trigger: true
    - get: kubo-release-bosh-io
      trigger: true
  - aggregate:
    - task: upload-stemcell
      file: oratos-ci/tasks/cfcr-upload-stemcell/task.yml
      input_mapping:
        bbl-state: oratos-ci-testing-cfcr-bbl-state
    - task: upload-bosh-release
      file: oratos-ci/tasks/cfcr-upload-bosh-release/task.yml
      input_mapping:
        bbl-state: oratos-ci-testing-cfcr-bbl-state
        bosh-release: bosh-metric-sink
    - task: upload-bosh-release
      file: oratos-ci/tasks/cfcr-upload-bosh-release/task.yml
      input_mapping:
        bbl-state: oratos-ci-testing-cfcr-bbl-state
        bosh-release: kubo-release-bosh-io
    - task: upload-vars-to-credhub
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: oratos/ci-base
        inputs:
        - name: oratos-ci-testing-cfcr-bbl-state
        - name: oratos-ci-testing-cfcr-gcp-vars
        params:
          DEBUG:
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            #!/bin/bash
            set -Eeuo pipefail; [ -n "${DEBUG:-}" ] && set -x

            pushd oratos-ci-testing-cfcr-bbl-state/bbl-state > /dev/null
              eval "$(bbl print-env)"
            popd > /dev/null

            credhub import --file oratos-ci-testing-cfcr-gcp-vars/vars.yml
    - task: modify-kubo-deployment
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: oratos/ci-base
        inputs:
        - name: kubo-deployment
        outputs:
        - name: modified-kubo-deployment
        params:
          DEBUG:
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            #!/bin/bash
            set -Eeuo pipefail; [ -n "${DEBUG:-}" ] && set -x

            cp -r kubo-deployment/. modified-kubo-deployment/
            cat <<EOF > add-bosh-metric-sink.yml
            - type: replace
              path: /releases/-
              value:
                name: bosh-metric-sink
                version: latest
            - type: replace
              path: /addons/-
              value:
                name: bosh-metric-sink
                include:
                  stemcell:
                  - os: ubuntu-xenial
                jobs:
                - name: metric-sink
                  release: bosh-metric-sink
                  properties:
                    outputs: |
                      [[outputs.discard]]
            EOF
            bosh interpolate kubo-deployment/manifests/cfcr.yml \
              --ops-file add-bosh-metric-sink.yml \
              > modified-kubo-deployment/manifests/cfcr.yml
  - task: cfcr-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: oratos-ci-testing-cfcr-bbl-state
      cf-deployment: modified-kubo-deployment
      ops-files: modified-kubo-deployment
      vars-files: kubo-deployment # this isn't used but is a required input
    params:
      SYSTEM_DOMAIN: example.com # this isn't used but is a required input
      MANIFEST_FILE: manifests/cfcr.yml
      OPS_FILES: |
        manifests/ops-files/allow-privileged-containers.yml
        manifests/ops-files/enable-podsecuritypolicy.yml
        manifests/ops-files/set-fs-inotify-limit.yml
        manifests/ops-files/iaas/gcp/cloud-provider.yml
        manifests/ops-files/iaas/gcp/add-service-key-master.yml
        manifests/ops-files/iaas/gcp/add-service-key-worker.yml
  - task: run-apply-addons-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: oratos-ci-testing-cfcr-bbl-state
    params:
      DEPLOYMENT_NAME: cfcr
      ERRAND_NAME: apply-addons
  - task: expose-kubernetes-service
    file: oratos-ci/tasks/expose-kubernetes-service/task.yml
    input_mapping:
      bbl-state: oratos-ci-testing-cfcr-bbl-state
    params:
      GET_CREDENTIALS_HOOK: |
        function cleanup {
            set +e
            killall -9 ssh > /dev/null 2>&1
            killall -9 ssh-agent > /dev/null 2>&1
        }
        trap cleanup EXIT
        BBL_STATE_DIR=bbl-state \
            oratos-ci/scripts/cfcr.sh get-credentials-tunnel testing
  - task: configure-dev-dns-zone
    file: oratos-ci/tasks/configure-dev-dns-zone/task.yml
    params:
      AWS_ACCESS_KEY_ID: ((aws.dev_dns_access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws.dev_dns_secret_access_key))
      ENV_DNS_NAME: testing-cfcr.oratos.ci.cf-app.com.

- name: oratos-ci-testing-cfcr-destroy
  serial_groups:
  - oratos-ci-testing-cfcr-lifecycle
  plan:
  - aggregate:
    - get: oratos-ci-testing-cfcr-bbl-state
    - get: oratos-ci
    - get: cf-deployment-concourse-tasks
  - task: delete-k8s-resources
    file: oratos-ci/tasks/k8s-delete-all-resources/task.yml
    input_mapping:
      bbl-state: oratos-ci-testing-cfcr-bbl-state
    params:
      GET_CREDENTIALS_HOOK: |
        BBL_STATE_DIR=bbl-state \
            oratos-ci/scripts/cfcr.sh get-credentials testing
  - task: cfcr-deployment-destroy
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: oratos-ci-testing-cfcr-bbl-state
    params:
      DEPLOYMENT_NAME: cfcr
      IGNORE_ERRORS: true

- name: control-plane-test-bbl-up
  serial: true
  serial_groups:
  - control-plane-test-director-lifecycle
  plan:
  - aggregate:
    - get: control-plane-test-bbl-state
    - get: cf-deployment-concourse-tasks
  - task: bbl-up
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    input_mapping:
      bbl-state: control-plane-test-bbl-state
      bbl-config: control-plane-test-bbl-state
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcloud.oratos-ci-testing-cfcr-service-account))
      BBL_GCP_REGION: us-central1
      BBL_ENV_NAME: control-plane-test
      SKIP_LB_CREATION: true
  - put: control-plane-test-bbl-state
    params:
      data: updated-bbl-state

- name: control-plane-test-bbl-destroy
  serial: true
  serial_groups:
  - control-plane-test-director-lifecycle
  plan:
  - aggregate:
    - get: control-plane-test-bbl-state
    - get: cf-deployment-concourse-tasks
  - task: bbl-destroy
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    input_mapping:
      bbl-state: control-plane-test-bbl-state
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((gcloud.oratos-ci-testing-cfcr-service-account))
  - put: control-plane-test-bbl-state
    params:
      data: updated-bbl-state

- name: control-plane-test-deploy
  serial: true
  serial_groups:
  - control-plane-test-lifecycle
  plan:
  - aggregate:
    - get: control-plane-test-bbl-state
    - get: control-plane-test-gcp-vars
    - get: cf-deployment-concourse-tasks
    - get: oratos-ci
    - get: bosh-metric-sink
    - get: kubo-deployment
      trigger: true
    - get: kubo-release-bosh-io
      trigger: true
  - aggregate:
    - task: upload-stemcell
      file: oratos-ci/tasks/cfcr-upload-stemcell/task.yml
      input_mapping:
        bbl-state: control-plane-test-bbl-state
    - task: upload-bosh-release
      file: oratos-ci/tasks/cfcr-upload-bosh-release/task.yml
      input_mapping:
        bbl-state: control-plane-test-bbl-state
        bosh-release: bosh-metric-sink
    - task: upload-bosh-release
      file: oratos-ci/tasks/cfcr-upload-bosh-release/task.yml
      input_mapping:
        bbl-state: control-plane-test-bbl-state
        bosh-release: kubo-release-bosh-io
    - task: upload-vars-to-credhub
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: oratos/ci-base
        inputs:
        - name: control-plane-test-bbl-state
        - name: control-plane-test-gcp-vars
        params:
          DEBUG:
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            #!/bin/bash
            set -Eeuo pipefail; [ -n "${DEBUG:-}" ] && set -x

            pushd control-plane-test-bbl-state/bbl-state > /dev/null
              eval "$(bbl print-env)"
            popd > /dev/null

            credhub import --file control-plane-test-gcp-vars/vars.yml
    - task: modify-kubo-deployment
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: oratos/ci-base
        inputs:
        - name: kubo-deployment
        outputs:
        - name: modified-kubo-deployment
        params:
          DEBUG:
        run:
          path: /bin/bash
          args:
          - "-c"
          - |
            #!/bin/bash
            set -Eeuo pipefail; [ -n "${DEBUG:-}" ] && set -x

            cp -r kubo-deployment/. modified-kubo-deployment/
            cat <<EOF > add-bosh-metric-sink.yml
            - type: replace
              path: /releases/-
              value:
                name: bosh-metric-sink
                version: latest
            - type: replace
              path: /addons/-
              value:
                name: bosh-metric-sink
                include:
                  stemcell:
                  - os: ubuntu-xenial
                jobs:
                - name: metric-sink
                  release: bosh-metric-sink
                  properties:
                    outputs: |
                      [[outputs.discard]]
            EOF
            bosh interpolate kubo-deployment/manifests/cfcr.yml \
              --ops-file add-bosh-metric-sink.yml \
              > modified-kubo-deployment/manifests/cfcr.yml
  - task: cfcr-deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: control-plane-test-bbl-state
      cf-deployment: modified-kubo-deployment
      ops-files: modified-kubo-deployment
      vars-files: kubo-deployment # this isn't used but is a required input
    params:
      SYSTEM_DOMAIN: example.com # this isn't used but is a required input
      MANIFEST_FILE: manifests/cfcr.yml
      OPS_FILES: |
        manifests/ops-files/misc/single-master.yml
        manifests/ops-files/allow-privileged-containers.yml
        manifests/ops-files/enable-podsecuritypolicy.yml
        manifests/ops-files/set-fs-inotify-limit.yml
        manifests/ops-files/iaas/gcp/cloud-provider.yml
        manifests/ops-files/iaas/gcp/add-service-key-master.yml
        manifests/ops-files/iaas/gcp/add-service-key-worker.yml
  - task: run-apply-addons-errand
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: control-plane-test-bbl-state
    params:
      DEPLOYMENT_NAME: cfcr
      ERRAND_NAME: apply-addons
  - task: expose-kubernetes-service
    file: oratos-ci/tasks/expose-kubernetes-service/task.yml
    input_mapping:
      bbl-state: control-plane-test-bbl-state
    params:
      GET_CREDENTIALS_HOOK: |
        function cleanup {
            set +e
            killall -9 ssh > /dev/null 2>&1
            killall -9 ssh-agent > /dev/null 2>&1
        }
        trap cleanup EXIT
        BBL_STATE_DIR=bbl-state \
            oratos-ci/scripts/cfcr.sh get-credentials-tunnel control-plane-test
  - task: configure-dev-dns-zone
    file: oratos-ci/tasks/configure-dev-dns-zone/task.yml
    params:
      AWS_ACCESS_KEY_ID: ((aws.dev_dns_access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws.dev_dns_secret_access_key))
      ENV_DNS_NAME: control-plane-test-cfcr.oratos.ci.cf-app.com.

- name: control-plane-test-destroy
  serial_groups:
  - control-plane-test-lifecycle
  plan:
  - aggregate:
    - get: control-plane-test-bbl-state
    - get: oratos-ci
    - get: cf-deployment-concourse-tasks
  - task: delete-k8s-resources
    file: oratos-ci/tasks/k8s-delete-all-resources/task.yml
    input_mapping:
      bbl-state: control-plane-test-bbl-state
    params:
      GET_CREDENTIALS_HOOK: |
        BBL_STATE_DIR=bbl-state \
            oratos-ci/scripts/cfcr.sh get-credentials control-plane-test
  - task: cfcr-deployment-destroy
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: control-plane-test-bbl-state
    params:
      DEPLOYMENT_NAME: cfcr
      IGNORE_ERRORS: true
