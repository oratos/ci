#!/bin/bash
set -Eeuo pipefail; [ -n "${DEBUG:-}" ] && set -x

source "oratos-ci/scripts/test/common.sh"

function validate {
    ensure_variable_isset "$GET_CREDENTIALS_HOOK" "GET_CREDENTIALS_HOOK"
}

function delete_old_jobs {
    kubectl delete -Rf sink-resources/manifests/500-cert-generator-job.yaml || true
}

function apply_manifests {
    cert_digest="$(cat cert-generator-image/digest)"
    ghost_digest="$(cat ghostunnel-image/digest)"
    fluent_digest=$(cat fluent-bit-out-syslog-image/digest)
    sink_digest="$(cat sink-controller-image/digest)"
    event_digest="$(cat event-controller-image/digest)"

    yq read sink-resources/manifests/500-cert-generator-job.yaml --tojson \
      | jq '(.spec.template.spec.containers[] | select(.name == "cert-generator")).image = "oratos/cert-generator@'"$cert_digest"'"' \
      > sink-resources/manifests/500-cert-generator-job.json
    rm sink-resources/manifests/500-cert-generator-job.yaml

    yq read sink-resources/manifests/500-fluent-bit-daemon.yaml --tojson \
      | jq '(.spec.template.spec.containers[] | select(.name == "fluent-bit")).image = "oratos/fluent-bit-out-syslog@'"$fluent_digest"'"' \
      | jq '(.spec.template.spec.containers[] | select(.name == "ghostunnel")).image = "oratos/ghostunnel@'"$ghost_digest"'"' \
      | jq '(.spec.template.spec.initContainers[] | select(.name == "concat-keystore")).image = "oratos/fluent-bit-out-syslog@'"$fluent_digest"'"' \
      > sink-resources/manifests/500-fluent-bit-daemon.json
    rm sink-resources/manifests/500-fluent-bit-daemon.yaml

    yq read sink-resources/manifests/500-sink-controller-deployment.yaml --tojson \
      | jq '(.spec.template.spec.containers[] | select(.name == "sink-controller")).image = "oratos/sink-controller@'"$sink_digest"'"' \
      > sink-resources/manifests/500-sink-controller-deployment.json
    rm sink-resources/manifests/500-sink-controller-deployment.yaml

    yq read sink-resources/manifests/500-event-controller-deployment.yaml --tojson \
      | jq '(.spec.template.spec.containers[] | select(.name == "event-controller")).image = "oratos/event-controller@'"$event_digest"'"' \
      | jq '(.spec.template.spec.containers[] | select(.name == "ghostunnel")).image = "oratos/ghostunnel@'"$ghost_digest"'"' \
      | jq '(.spec.template.spec.initContainers[] | select(.name == "concat-keystore")).image = "oratos/fluent-bit-out-syslog@'"$fluent_digest"'"' \
      > sink-resources/manifests/500-event-controller-deployment.json
    rm sink-resources/manifests/500-event-controller-deployment.yaml

    kubectl apply -R -f sink-resources/manifests
}

function roll {
    # patch objects to make sure they are rolled
    patch='{"spec": {"template": {"metadata": {"labels": {"randomversion": "'$RANDOM'"}}}}}'
    for f in sink-resources/manifests/500-*{daemon,deployment}.json; do
        kubectl patch -f "$f" --patch "$patch"
    done
}

function main {
    validate
    login_to_cluster_as_admin
    delete_old_jobs
    apply_manifests
    roll
}

main
