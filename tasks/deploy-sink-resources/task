#!/bin/bash
set -Eeuo pipefail; [ -n "${DEBUG:-}" ] && set -x

source "oratos-ci/scripts/test/common.sh"

function validate {
    ensure_variable_isset "$GET_CREDENTIALS_HOOK" "GET_CREDENTIALS_HOOK"
}

function delete_old_jobs {
    kubectl delete jobs --all --namespace pks-system
    echo "Completed deleting all jobs in pks-system namespace"
}

function roll {
    kubectl delete pods --all --namespace pks-system
    echo "Completed rolling all the pods in pks-system namespace"
}

function apply_manifests {
    cert_digest="$(cat cert-generator-image/digest)"
    ghost_digest="$(cat ghostunnel-image/digest)"
    fluent_digest=$(cat fluent-bit-out-syslog-image/digest)
    sink_digest="$(cat sink-controller-image/digest)"
    event_digest="$(cat event-controller-image/digest)"
    metric_digest="$(cat metric-controller-image/digest)"
    validator_digest="$(cat validator-image/digest)"
    sink_state_updater_digest="$(cat sink-state-updater-image/digest)"
    telegraf_digest="$(cat telegraf-image/digest)"
    pushd sink-resources/manifests/overlays/pks
        kustomize edit set imagetag "oratos/cert-generator@$cert_digest"
        kustomize edit set imagetag "oratos/ghostunnel@$ghost_digest"
        kustomize edit set imagetag "oratos/fluent-bit-out-syslog@$fluent_digest"
        kustomize edit set imagetag "oratos/sink-controller@$sink_digest"
        kustomize edit set imagetag "oratos/event-controller@$event_digest"
        kustomize edit set imagetag "oratos/metric-controller@$metric_digest"
        kustomize edit set imagetag "oratos/validator@$validator_digest"
        kustomize edit set imagetag "oratos/sink-state-updater@$sink_state_updater_digest"
        kustomize edit set imagetag "oratos/telegraf@$telegraf_digest"
    popd

    # Using $RANDOM for sink resources version to ensure cert-generator job is
    # always ran.
    kustomize build sink-resources/manifests/overlays/pks \
        | sed "s/SINK_RESOURCES_VERSION/$RANDOM/g" \
        | kubectl apply -f -
    echo "Completed applying the manifests for sink-resources/pks"
}

function verify_resources_are_running {
    # Just wait for some time to increase the chances of the sink-resources to
    # come up. TODO: Remove this eventually.
    sleep 10

    # Verify sink resources are healthy
    verify_deployment_running "app=sink-controller"
    verify_deployment_running "app=event-controller"
    verify_deployment_running "app=metric-controller"
    verify_deployment_running "app=validator"

    verify_daemonset_running "k8s-app=logging-agent"
    verify_daemonset_running "app=telegraf"
}

function main {
    validate
    login_to_cluster_as_admin
    delete_old_jobs
    apply_manifests
    roll
    verify_resources_are_running
}

main
