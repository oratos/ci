#!/bin/bash
set -Eeuo pipefail; [ -n "${DEBUG:-}" ] && set -x

source "oratos-ci/scripts/test/common.sh"

function validate {
    ensure_variable_isset "$GET_CREDENTIALS_HOOK" "GET_CREDENTIALS_HOOK"
    ensure_variable_isset "$IMAGE_REPOSITORY" "IMAGE_REPOSITORY"
}

function delete_old_jobs {
    kubectl delete jobs --all --namespace pks-system
    echo "Completed deleting all jobs in pks-system namespace"
}

function roll {
    kubectl delete pods --all --namespace pks-system
    echo "Completed rolling all the pods in pks-system namespace"
}

function apply_manifests {
    image_sha="$(cat sink-resources/digest)"
    pushd sink-resources/manifests/observability-manager
        kustomize edit set image "$IMAGE_REPOSITORY/observability-manager@$image_sha"
        kubectl apply -k .
        echo "Completed applying the manifests for sink-resources/pks"
    popd
}

function verify_resources_are_running {
    # sleep to give time for resources to exist at all
    sleep 30

    # Verify sink resources are healthy
    verify_labeled_pod_running "app=sink-controller"
    verify_labeled_pod_running "app=event-controller"
    verify_labeled_pod_running "app=metric-controller"
    verify_labeled_pod_running "app=validator"
    if [[ $HAS_NODE_EXPORTER == "true" ]]; then
        verify_labeled_pod_running "app=node-exporter"
        verify_labeled_pod_running "app=fluent-bit"
    else
        verify_labeled_pod_running "app=fluent-bit-ds"
    fi

    verify_labeled_pod_running "app=telegraf"
}

function main {
    validate
    login_to_cluster_as_admin
    delete_old_jobs
    apply_manifests
    roll
    verify_resources_are_running
}

main
