#!/bin/bash
set -Eeuo pipefail; [ -n "${DEBUG:-}" ] && set -x

sha="$(cat sink-resources-github-release/commit_sha)"
export SINK_RESOURCES_SHA="$sha"

version="v$(cat sink-resources-version/version)"
export SINK_RESOURCES_VERSION="$version"

release_file="sink-resources-release.tgz"

# get fluent-bit-out-syslog sha and version for OSL
fluent_version="$(cat fluent-bit-out-syslog-github-release/version)"
export FLUENT_BIT_OUT_SYSLOG_VERSION="$fluent_version"
fluent_sha="$(cat fluent-bit-out-syslog-github-release/commit_sha)"
export FLUENT_BIT_OUT_SYSLOG_SHA="$fluent_sha"

git clone sink-resources-release put-sink-resources-release
pushd put-sink-resources-release
  echo "$PRIVATE_YML" > config/private.yml

  bosh sync-blobs

  echo "Clean old blobs"
  for b in $(bosh blobs --column="Path"); do
    echo "bosh remove-blob $b"
    bosh remove-blob "$b"
  done

  echo "Begin blob management"
  for file in ../sink-resources-github-release/*.tgz; do
    file_name=${file##*/}
    bosh add-blob "${file}" "container-images/${file_name}"
  done

  bosh upload-blobs

  echo "Create final release"
  bosh --non-interactive create-release \
       --final \
       --force \
       --version="${SINK_RESOURCES_VERSION#v}" \
       --tarball="${release_file}"

  echo "Move build ${release_file} - ${SINK_RESOURCES_VERSION} to bosh-release/binaries"
  mkdir -p ../bosh-release/binaries
  mv "${release_file}" "../bosh-release/binaries/sink-resources-release-${SINK_RESOURCES_VERSION}.tgz"

  git add .
  git commit -m"CI bump sink resource release to ${SINK_RESOURCES_VERSION}"
  SINK_RESOURCES_RELEASE_SHA=$(git rev-parse @)
popd

echo "$SINK_RESOURCES_VERSION" > bosh-release/name
echo "$SINK_RESOURCES_VERSION" > bosh-release/tag
echo "$SINK_RESOURCES_RELEASE_SHA" > bosh-release/commitish
ls -alth bosh-release/binaries
