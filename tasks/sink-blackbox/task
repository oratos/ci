#!/bin/bash
set -Eeuo pipefail; [ -n "${DEBUG:-}" ] && set -x

source "oratos-ci/scripts/test/common.sh"

if [ -z "$GET_CREDENTIALS_HOOK" ]; then
  echo GET_CREDENTIALS_HOOK must be set
  exit 1
fi
if [ -z "$SYSTEM_DOMAIN" ]; then
  echo SYSTEM_DOMAIN must be set
  exit 1
fi
if [ -z "$PAPERTRAIL_DESTINATION" ]; then
  echo PAPERTRAIL_DESTINATION must be set
  exit 1
fi
if [ -z "$PAPERTRAIL_GROUP" ]; then
  echo PAPERTRAIL_GROUP must be set
  exit 1
fi
if [ -z "$PAPERTRAIL_TOKEN" ]; then
  echo PAPERTRAIL_TOKEN must be set
  exit 1
fi
if [ -z "$DATADOG_API_KEY" ]; then
  echo DATADOG_API_KEY must be set
  exit 1
fi

MESSAGE="$MESSAGE-$RANDOM"
DEPLOYMENT=$(echo "$MESSAGE" | tr '[:upper:]' '[:lower:]')
papertrail_host="$(echo "$PAPERTRAIL_DESTINATION" | awk -F ':' '{print $1}')"
papertrail_port="$(echo "$PAPERTRAIL_DESTINATION" | awk -F ':' '{print $2}')"

manifest="
apiVersion: v1
kind: Namespace
metadata:
  name: blackbox-tests
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: blackbox-tests
spec:
  volumes:
  - secret
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: blackbox-tests
  namespace: blackbox-tests
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: blackbox-tests
  namespace: blackbox-tests
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
  resourceNames:
  - blackbox-tests
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: blackbox-tests
  namespace: blackbox-tests
subjects:
- kind: ServiceAccount
  name: blackbox-tests
  namespace: blackbox-tests
roleRef:
  kind: Role
  name: blackbox-tests
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: logspinner-$DEPLOYMENT
  namespace: blackbox-tests
  labels:
    run: logspinner-$DEPLOYMENT
spec:
  replicas: 1
  selector:
    matchLabels:
      run: logspinner-$DEPLOYMENT
  template:
    metadata:
      labels:
        run: logspinner-$DEPLOYMENT
    spec:
      serviceAccountName: blackbox-tests
      containers:
      - name: logspinner-$DEPLOYMENT
        image: loggregator/logspinner
        env:
        - name: PORT
          value: \"8080\"
---
apiVersion: apps.pivotal.io/v1beta1
kind: Sink
metadata:
  name: blackbox-test-sink
  namespace: blackbox-tests
spec:
  type: syslog
  host: $papertrail_host
  port: $papertrail_port
"

# Install and setup papertrail cli
gem install papertrail
[ -n "${DEBUG:-}" ] && set +x
echo "token: $PAPERTRAIL_TOKEN" > ~/.papertrail.yml
[ -n "${DEBUG:-}" ] && set -x

function delete_sinks {
    # only one blackbox tests can run at a given time
    # delete all the sinks for the blackbox-tests namespace before and after
    # tests run
    kubectl delete sink --all --namespace blackbox-tests || true
}

function report_to_datadog {
  currenttime="$(date +%s)"
  APP_NAME=sink-blackbox
  curl --fail -X POST -H "Content-type: application/json" \
  -d "{ \"series\" :
    [
      {
        \"metric\":\"smoke_test.fluent.k8s_namespace_delay\",
        \"points\":[[${currenttime}, ${DELAY}]],
        \"type\":\"gauge\",
        \"host\":\"${SYSTEM_DOMAIN}\",
        \"tags\":[
          \"${APP_NAME}\",
          \"delay_unit:${DELAY_UNIT}\"
        ]
      },
      {
        \"metric\":\"smoke_test.fluent.k8s_namespace_logs_received\",
        \"points\":[[${currenttime}, ${MSG_COUNT}]],
        \"type\":\"gauge\",
        \"host\":\"${SYSTEM_DOMAIN}\",
        \"tags\":[
          \"${APP_NAME}\",
          \"delay:${DELAY}${DELAY_UNIT}\"
        ]
      },
      {
        \"metric\":\"smoke_test.fluent.k8s_namespace_logs_sent\",
        \"points\":[[${currenttime}, ${CYCLES}]],
        \"type\":\"gauge\",
        \"host\":\"${SYSTEM_DOMAIN}\",
        \"tags\":[
          \"${APP_NAME}\",
          \"delay:${DELAY}${DELAY_UNIT}\"
        ]
      }
    ]
  }" \
  'https://app.datadoghq.com/api/v1/series?api_key='"$DATADOG_API_KEY"

  delete_sinks
  kubectl delete deployment "logspinner-$DEPLOYMENT" --namespace blackbox-tests

  set +e
  killall kubectl
}
trap report_to_datadog EXIT

MSG_COUNT=0

[ -n "${DEBUG:-}" ] && set +x
eval "$GET_CREDENTIALS_HOOK"
[ -n "${DEBUG:-}" ] && set -x

delete_sinks
echo "$manifest" | kubectl apply -f -

logspinner_pod_name="$(
    kubectl get pod \
        --selector run=logspinner-$DEPLOYMENT \
        --output=json \
        --namespace blackbox-tests \
        | jq --join-output .items[0].metadata.name
)"

echo waiting for logspinner to be up
verify_pod_running "$logspinner_pod_name" "blackbox-tests"

sleep 10

echo waiting for fluent-bit to be up
verify_daemonset_running "k8s-app=logging-agent" "oratos"

kubectl port-forward "$logspinner_pod_name" 8080:8080 \
    --namespace blackbox-tests > /dev/null &

sleep 15

echo "Triggering $logspinner_pod_name"
curl "http://localhost:8080?cycles=$CYCLES&delay=$DELAY$DELAY_UNIT&text=$MESSAGE"

sleep "$WAIT" # wait for a bit to collect logs

echo "Collecting logs for $logspinner_pod_name"
papertrail \
    --min-time '30 minutes ago' \
    --group "$PAPERTRAIL_GROUP" \
    "$MESSAGE" \
    > output.txt

# Dont quit the script if fails to grep
set +e
MSG_COUNT=$(grep -c "$MESSAGE" output.txt)
set -e

echo "The number of messages received: $MSG_COUNT"
echo "The number of messages sent    : $CYCLES"
if [ "$MSG_COUNT" -lt $((CYCLES * 99 / 100)) ]; then
    echo =========================================
    echo THE RELIABILITY TEST DID NOT MEET OUR SLO
    echo =========================================
    exit 1
fi

# Trap will send metrics to datadog
